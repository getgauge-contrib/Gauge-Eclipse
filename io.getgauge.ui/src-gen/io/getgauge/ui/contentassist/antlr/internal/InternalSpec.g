/*
* generated by Xtext
*/
grammar InternalSpec;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package io.getgauge.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package io.getgauge.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import io.getgauge.services.SpecGrammarAccess;

}

@parser::members {
 
 	private SpecGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SpecGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpec
entryRuleSpec 
:
{ before(grammarAccess.getSpecRule()); }
	 ruleSpec
{ after(grammarAccess.getSpecRule()); } 
	 EOF 
;

// Rule Spec
ruleSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecAccess().getAlternatives()); }
(rule__Spec__Alternatives)
{ after(grammarAccess.getSpecAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScenario
entryRuleScenario 
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScenarioAccess().getAlternatives()); }
(rule__Scenario__Alternatives)
{ after(grammarAccess.getScenarioAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStep
entryRuleStep 
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStepAccess().getGroup()); }
(rule__Step__Group__0)
{ after(grammarAccess.getStepAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticParam
entryRuleStaticParam 
:
{ before(grammarAccess.getStaticParamRule()); }
	 ruleStaticParam
{ after(grammarAccess.getStaticParamRule()); } 
	 EOF 
;

// Rule StaticParam
ruleStaticParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticParamAccess().getNameAssignment()); }
(rule__StaticParam__NameAssignment)
{ after(grammarAccess.getStaticParamAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDynamicParam
entryRuleDynamicParam 
:
{ before(grammarAccess.getDynamicParamRule()); }
	 ruleDynamicParam
{ after(grammarAccess.getDynamicParamRule()); } 
	 EOF 
;

// Rule DynamicParam
ruleDynamicParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDynamicParamAccess().getNameAssignment()); }
(rule__DynamicParam__NameAssignment)
{ after(grammarAccess.getDynamicParamAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTags
entryRuleTags 
:
{ before(grammarAccess.getTagsRule()); }
	 ruleTags
{ after(grammarAccess.getTagsRule()); } 
	 EOF 
;

// Rule Tags
ruleTags
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagsAccess().getGroup()); }
(rule__Tags__Group__0)
{ after(grammarAccess.getTagsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getGroup()); }
(rule__Comment__Group__0)
{ after(grammarAccess.getCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextPart
entryRuleTextPart 
:
{ before(grammarAccess.getTextPartRule()); }
	 ruleTextPart
{ after(grammarAccess.getTextPartRule()); } 
	 EOF 
;

// Rule TextPart
ruleTextPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextPartAccess().getAlternatives()); }
(rule__TextPart__Alternatives)
{ after(grammarAccess.getTextPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTable
entryRuleTable 
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableAccess().getGroup()); }
(rule__Table__Group__0)
{ after(grammarAccess.getTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableRow
entryRuleTableRow 
:
{ before(grammarAccess.getTableRowRule()); }
	 ruleTableRow
{ after(grammarAccess.getTableRowRule()); } 
	 EOF 
;

// Rule TableRow
ruleTableRow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableRowAccess().getGroup()); }
(rule__TableRow__Group__0)
{ after(grammarAccess.getTableRowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableCell
entryRuleTableCell 
:
{ before(grammarAccess.getTableCellRule()); }
	 ruleTableCell
{ after(grammarAccess.getTableCellRule()); } 
	 EOF 
;

// Rule TableCell
ruleTableCell
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableCellAccess().getGroup()); }
(rule__TableCell__Group__0)
{ after(grammarAccess.getTableCellAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__DefinitionsAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDefinitionsSpecParserRuleCall_2_0_0()); }
	ruleSpec
{ after(grammarAccess.getModelAccess().getDefinitionsSpecParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getDefinitionsScenarioParserRuleCall_2_0_1()); }
	ruleScenario
{ after(grammarAccess.getModelAccess().getDefinitionsScenarioParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getDefinitionsStepParserRuleCall_2_0_2()); }
	ruleStep
{ after(grammarAccess.getModelAccess().getDefinitionsStepParserRuleCall_2_0_2()); }
)

    |(
{ before(grammarAccess.getModelAccess().getDefinitionsCommentParserRuleCall_2_0_3()); }
	ruleComment
{ after(grammarAccess.getModelAccess().getDefinitionsCommentParserRuleCall_2_0_3()); }
)

    |(
{ before(grammarAccess.getModelAccess().getDefinitionsTagsParserRuleCall_2_0_4()); }
	ruleTags
{ after(grammarAccess.getModelAccess().getDefinitionsTagsParserRuleCall_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAccess().getGroup_0()); }
(rule__Spec__Group_0__0)
{ after(grammarAccess.getSpecAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSpecAccess().getGroup_1()); }
(rule__Spec__Group_1__0)
{ after(grammarAccess.getSpecAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getGroup_0()); }
(rule__Scenario__Group_0__0)
{ after(grammarAccess.getScenarioAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getScenarioAccess().getGroup_1()); }
(rule__Scenario__Group_1__0)
{ after(grammarAccess.getScenarioAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getStaticParamsAssignment_2_0_0()); }
(rule__Step__StaticParamsAssignment_2_0_0)
{ after(grammarAccess.getStepAccess().getStaticParamsAssignment_2_0_0()); }
)

    |(
{ before(grammarAccess.getStepAccess().getDynamicParamsAssignment_2_0_1()); }
(rule__Step__DynamicParamsAssignment_2_0_1)
{ after(grammarAccess.getStepAccess().getDynamicParamsAssignment_2_0_1()); }
)

    |(
{ before(grammarAccess.getStepAccess().getWORDTerminalRuleCall_2_0_2()); }
	RULE_WORD
{ after(grammarAccess.getStepAccess().getWORDTerminalRuleCall_2_0_2()); }
)

    |(
{ before(grammarAccess.getStepAccess().getHyphenMinusKeyword_2_0_3()); }

	'-' 

{ after(grammarAccess.getStepAccess().getHyphenMinusKeyword_2_0_3()); }
)

    |(
{ before(grammarAccess.getStepAccess().getEqualsSignKeyword_2_0_4()); }

	'=' 

{ after(grammarAccess.getStepAccess().getEqualsSignKeyword_2_0_4()); }
)

    |(
{ before(grammarAccess.getStepAccess().getWSTerminalRuleCall_2_0_5()); }
	RULE_WS
{ after(grammarAccess.getStepAccess().getWSTerminalRuleCall_2_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tags__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagsAccess().getWORDTerminalRuleCall_4_0()); }
	RULE_WORD
{ after(grammarAccess.getTagsAccess().getWORDTerminalRuleCall_4_0()); }
)

    |(
{ before(grammarAccess.getTagsAccess().getWSTerminalRuleCall_4_1()); }
	RULE_WS
{ after(grammarAccess.getTagsAccess().getWSTerminalRuleCall_4_1()); }
)

    |(
{ before(grammarAccess.getTagsAccess().getCommaKeyword_4_2()); }

	',' 

{ after(grammarAccess.getTagsAccess().getCommaKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getNameTextPartParserRuleCall_1_0_0()); }
	ruleTextPart
{ after(grammarAccess.getCommentAccess().getNameTextPartParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getCommentAccess().getNameHyphenMinusKeyword_1_0_1()); }

	'-' 

{ after(grammarAccess.getCommentAccess().getNameHyphenMinusKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getCommentAccess().getNameEqualsSignKeyword_1_0_2()); }

	'=' 

{ after(grammarAccess.getCommentAccess().getNameEqualsSignKeyword_1_0_2()); }
)

    |(
{ before(grammarAccess.getCommentAccess().getNameVerticalLineKeyword_1_0_3()); }

	'|' 

{ after(grammarAccess.getCommentAccess().getNameVerticalLineKeyword_1_0_3()); }
)

    |(
{ before(grammarAccess.getCommentAccess().getNameCommaKeyword_1_0_4()); }

	',' 

{ after(grammarAccess.getCommentAccess().getNameCommaKeyword_1_0_4()); }
)

    |(
{ before(grammarAccess.getCommentAccess().getNameColonKeyword_1_0_5()); }

	':' 

{ after(grammarAccess.getCommentAccess().getNameColonKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextPartAccess().getWORDTerminalRuleCall_0()); }
	RULE_WORD
{ after(grammarAccess.getTextPartAccess().getWORDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTextPartAccess().getSEPARATORSTerminalRuleCall_1()); }
	RULE_SEPARATORS
{ after(grammarAccess.getTextPartAccess().getSEPARATORSTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTextPartAccess().getSTATIC_PARAMTerminalRuleCall_2()); }
	RULE_STATIC_PARAM
{ after(grammarAccess.getTextPartAccess().getSTATIC_PARAMTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTextPartAccess().getDYNAMIC_PARAMTerminalRuleCall_3()); }
	RULE_DYNAMIC_PARAM
{ after(grammarAccess.getTextPartAccess().getDYNAMIC_PARAMTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTextPartAccess().getWSTerminalRuleCall_4()); }
	RULE_WS
{ after(grammarAccess.getTextPartAccess().getWSTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableCell__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableCellAccess().getNameWORDTerminalRuleCall_1_0_0()); }
	RULE_WORD
{ after(grammarAccess.getTableCellAccess().getNameWORDTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getTableCellAccess().getNameSEPARATORSTerminalRuleCall_1_0_1()); }
	RULE_SEPARATORS
{ after(grammarAccess.getTableCellAccess().getNameSEPARATORSTerminalRuleCall_1_0_1()); }
)

    |(
{ before(grammarAccess.getTableCellAccess().getNameWSTerminalRuleCall_1_0_2()); }
	RULE_WS
{ after(grammarAccess.getTableCellAccess().getNameWSTerminalRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSINGLE_NLTerminalRuleCall_1()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getModelAccess().getSINGLE_NLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDefinitionsAssignment_2()); }
(rule__Model__DefinitionsAssignment_2)*
{ after(grammarAccess.getModelAccess().getDefinitionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Spec__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Spec__Group_0__0__Impl
	rule__Spec__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAccess().getNumberSignSpaceKeyword_0_0()); }

	'# ' 

{ after(grammarAccess.getSpecAccess().getNumberSignSpaceKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Spec__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Spec__Group_0__1__Impl
	rule__Spec__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSpecAccess().getNameAssignment_0_1()); }
(rule__Spec__NameAssignment_0_1)
{ after(grammarAccess.getSpecAccess().getNameAssignment_0_1()); }
)
(
{ before(grammarAccess.getSpecAccess().getNameAssignment_0_1()); }
(rule__Spec__NameAssignment_0_1)*
{ after(grammarAccess.getSpecAccess().getNameAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Spec__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Spec__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_0_2()); }
(	RULE_SINGLE_NL)
{ after(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_0_2()); }
)
(
{ before(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_0_2()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_0_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Spec__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Spec__Group_1__0__Impl
	rule__Spec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSpecAccess().getNameAssignment_1_0()); }
(rule__Spec__NameAssignment_1_0)
{ after(grammarAccess.getSpecAccess().getNameAssignment_1_0()); }
)
(
{ before(grammarAccess.getSpecAccess().getNameAssignment_1_0()); }
(rule__Spec__NameAssignment_1_0)*
{ after(grammarAccess.getSpecAccess().getNameAssignment_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Spec__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Spec__Group_1__1__Impl
	rule__Spec__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_1_1()); }
	RULE_SINGLE_NL
{ after(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Spec__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Spec__Group_1__2__Impl
	rule__Spec__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSpecAccess().getEqualsSignKeyword_1_2()); }
(
	'=' 
)
{ after(grammarAccess.getSpecAccess().getEqualsSignKeyword_1_2()); }
)
(
{ before(grammarAccess.getSpecAccess().getEqualsSignKeyword_1_2()); }
(
	'=' 
)*
{ after(grammarAccess.getSpecAccess().getEqualsSignKeyword_1_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Spec__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Spec__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_1_3()); }
(	RULE_SINGLE_NL)
{ after(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_1_3()); }
)
(
{ before(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_1_3()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getSpecAccess().getSINGLE_NLTerminalRuleCall_1_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Scenario__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_0__0__Impl
	rule__Scenario__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNumberSignNumberSignSpaceKeyword_0_0()); }

	'## ' 

{ after(grammarAccess.getScenarioAccess().getNumberSignNumberSignSpaceKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_0__1__Impl
	rule__Scenario__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getScenarioAccess().getNameAssignment_0_1()); }
(rule__Scenario__NameAssignment_0_1)
{ after(grammarAccess.getScenarioAccess().getNameAssignment_0_1()); }
)
(
{ before(grammarAccess.getScenarioAccess().getNameAssignment_0_1()); }
(rule__Scenario__NameAssignment_0_1)*
{ after(grammarAccess.getScenarioAccess().getNameAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_0_2()); }
(	RULE_SINGLE_NL)
{ after(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_0_2()); }
)
(
{ before(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_0_2()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_0_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Scenario__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_1__0__Impl
	rule__Scenario__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getScenarioAccess().getNameAssignment_1_0()); }
(rule__Scenario__NameAssignment_1_0)
{ after(grammarAccess.getScenarioAccess().getNameAssignment_1_0()); }
)
(
{ before(grammarAccess.getScenarioAccess().getNameAssignment_1_0()); }
(rule__Scenario__NameAssignment_1_0)*
{ after(grammarAccess.getScenarioAccess().getNameAssignment_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_1__1__Impl
	rule__Scenario__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_1_1()); }
	RULE_SINGLE_NL
{ after(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_1__2__Impl
	rule__Scenario__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getScenarioAccess().getHyphenMinusKeyword_1_2()); }
(
	'-' 
)
{ after(grammarAccess.getScenarioAccess().getHyphenMinusKeyword_1_2()); }
)
(
{ before(grammarAccess.getScenarioAccess().getHyphenMinusKeyword_1_2()); }
(
	'-' 
)*
{ after(grammarAccess.getScenarioAccess().getHyphenMinusKeyword_1_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scenario__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_1_3()); }
(	RULE_SINGLE_NL)
{ after(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_1_3()); }
)
(
{ before(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_1_3()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getScenarioAccess().getSINGLE_NLTerminalRuleCall_1_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Step__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group__0__Impl
	rule__Step__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getStepAction_0()); }
(

)
{ after(grammarAccess.getStepAccess().getStepAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group__1__Impl
	rule__Step__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getAsteriskSpaceKeyword_1()); }

	'* ' 

{ after(grammarAccess.getStepAccess().getAsteriskSpaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group__2__Impl
	rule__Step__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStepAccess().getGroup_2()); }
(rule__Step__Group_2__0)
{ after(grammarAccess.getStepAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getStepAccess().getGroup_2()); }
(rule__Step__Group_2__0)*
{ after(grammarAccess.getStepAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group__3__Impl
	rule__Step__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getSINGLE_NLTerminalRuleCall_3()); }
	RULE_SINGLE_NL
{ after(grammarAccess.getStepAccess().getSINGLE_NLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group__4__Impl
	rule__Step__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getGroup_4()); }
(rule__Step__Group_4__0)?
{ after(grammarAccess.getStepAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getSINGLE_NLTerminalRuleCall_5()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getStepAccess().getSINGLE_NLTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Step__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group_2__0__Impl
	rule__Step__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getAlternatives_2_0()); }
(rule__Step__Alternatives_2_0)
{ after(grammarAccess.getStepAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getSEPARATORSTerminalRuleCall_2_1()); }
(	RULE_SEPARATORS)*
{ after(grammarAccess.getStepAccess().getSEPARATORSTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Step__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group_4__0__Impl
	rule__Step__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getSINGLE_NLTerminalRuleCall_4_0()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getStepAccess().getSINGLE_NLTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Step__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getTableAssignment_4_1()); }
(rule__Step__TableAssignment_4_1)
{ after(grammarAccess.getStepAccess().getTableAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Tags__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tags__Group__0__Impl
	rule__Tags__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tags__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagsAccess().getTagsAction_0()); }
(

)
{ after(grammarAccess.getTagsAccess().getTagsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tags__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tags__Group__1__Impl
	rule__Tags__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tags__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagsAccess().getTagsKeyword_1()); }

	'tags' 

{ after(grammarAccess.getTagsAccess().getTagsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tags__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tags__Group__2__Impl
	rule__Tags__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tags__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagsAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getTagsAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tags__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tags__Group__3__Impl
	rule__Tags__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Tags__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagsAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getTagsAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tags__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tags__Group__4__Impl
	rule__Tags__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Tags__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTagsAccess().getAlternatives_4()); }
(rule__Tags__Alternatives_4)
{ after(grammarAccess.getTagsAccess().getAlternatives_4()); }
)
(
{ before(grammarAccess.getTagsAccess().getAlternatives_4()); }
(rule__Tags__Alternatives_4)*
{ after(grammarAccess.getTagsAccess().getAlternatives_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tags__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tags__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tags__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTagsAccess().getSINGLE_NLTerminalRuleCall_5()); }
(	RULE_SINGLE_NL)
{ after(grammarAccess.getTagsAccess().getSINGLE_NLTerminalRuleCall_5()); }
)
(
{ before(grammarAccess.getTagsAccess().getSINGLE_NLTerminalRuleCall_5()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getTagsAccess().getSINGLE_NLTerminalRuleCall_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Comment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getNameAssignment_0()); }
(rule__Comment__NameAssignment_0)
{ after(grammarAccess.getCommentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group__1__Impl
	rule__Comment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getNameAssignment_1()); }
(rule__Comment__NameAssignment_1)*
{ after(grammarAccess.getCommentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCommentAccess().getSINGLE_NLTerminalRuleCall_2()); }
(	RULE_SINGLE_NL)
{ after(grammarAccess.getCommentAccess().getSINGLE_NLTerminalRuleCall_2()); }
)
(
{ before(grammarAccess.getCommentAccess().getSINGLE_NLTerminalRuleCall_2()); }
(	RULE_SINGLE_NL)*
{ after(grammarAccess.getCommentAccess().getSINGLE_NLTerminalRuleCall_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Table__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getWSTerminalRuleCall_0()); }
(	RULE_WS)*
{ after(grammarAccess.getTableAccess().getWSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getHeadingAssignment_1()); }
(rule__Table__HeadingAssignment_1)
{ after(grammarAccess.getTableAccess().getHeadingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getTableAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableAccess().getGroup_3()); }
(rule__Table__Group_3__0)
{ after(grammarAccess.getTableAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getTableAccess().getGroup_3()); }
(rule__Table__Group_3__0)*
{ after(grammarAccess.getTableAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getTABLE_ROW_ENDTerminalRuleCall_4()); }
	RULE_TABLE_ROW_END
{ after(grammarAccess.getTableAccess().getTABLE_ROW_ENDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableAccess().getGroup_5()); }
(rule__Table__Group_5__0)
{ after(grammarAccess.getTableAccess().getGroup_5()); }
)
(
{ before(grammarAccess.getTableAccess().getGroup_5()); }
(rule__Table__Group_5__0)*
{ after(grammarAccess.getTableAccess().getGroup_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Table__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group_3__0__Impl
	rule__Table__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getVerticalLineKeyword_3_0()); }

	'|' 

{ after(grammarAccess.getTableAccess().getVerticalLineKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableAccess().getHyphenMinusKeyword_3_1()); }
(
	'-' 
)
{ after(grammarAccess.getTableAccess().getHyphenMinusKeyword_3_1()); }
)
(
{ before(grammarAccess.getTableAccess().getHyphenMinusKeyword_3_1()); }
(
	'-' 
)*
{ after(grammarAccess.getTableAccess().getHyphenMinusKeyword_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Table__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group_5__0__Impl
	rule__Table__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getWSTerminalRuleCall_5_0()); }
(	RULE_WS)*
{ after(grammarAccess.getTableAccess().getWSTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRowsAssignment_5_1()); }
(rule__Table__RowsAssignment_5_1)
{ after(grammarAccess.getTableAccess().getRowsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableRow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableRow__Group__0__Impl
	rule__TableRow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableRowAccess().getCellsAssignment_0()); }
(rule__TableRow__CellsAssignment_0)
{ after(grammarAccess.getTableRowAccess().getCellsAssignment_0()); }
)
(
{ before(grammarAccess.getTableRowAccess().getCellsAssignment_0()); }
(rule__TableRow__CellsAssignment_0)*
{ after(grammarAccess.getTableRowAccess().getCellsAssignment_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableRow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableRow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableRowAccess().getTABLE_ROW_ENDTerminalRuleCall_1()); }
	RULE_TABLE_ROW_END
{ after(grammarAccess.getTableRowAccess().getTABLE_ROW_ENDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableCell__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableCell__Group__0__Impl
	rule__TableCell__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableCell__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableCellAccess().getVerticalLineKeyword_0()); }

	'|' 

{ after(grammarAccess.getTableCellAccess().getVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableCell__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableCell__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableCell__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableCellAccess().getNameAssignment_1()); }
(rule__TableCell__NameAssignment_1)
{ after(grammarAccess.getTableCellAccess().getNameAssignment_1()); }
)
(
{ before(grammarAccess.getTableCellAccess().getNameAssignment_1()); }
(rule__TableCell__NameAssignment_1)*
{ after(grammarAccess.getTableCellAccess().getNameAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DefinitionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDefinitionsAlternatives_2_0()); }
(rule__Model__DefinitionsAlternatives_2_0)
{ after(grammarAccess.getModelAccess().getDefinitionsAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAccess().getNameTextPartParserRuleCall_0_1_0()); }
	ruleTextPart{ after(grammarAccess.getSpecAccess().getNameTextPartParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Spec__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAccess().getNameTextPartParserRuleCall_1_0_0()); }
	ruleTextPart{ after(grammarAccess.getSpecAccess().getNameTextPartParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNameTextPartParserRuleCall_0_1_0()); }
	ruleTextPart{ after(grammarAccess.getScenarioAccess().getNameTextPartParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScenarioAccess().getNameTextPartParserRuleCall_1_0_0()); }
	ruleTextPart{ after(grammarAccess.getScenarioAccess().getNameTextPartParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Step__StaticParamsAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getStaticParamsStaticParamParserRuleCall_2_0_0_0()); }
	ruleStaticParam{ after(grammarAccess.getStepAccess().getStaticParamsStaticParamParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Step__DynamicParamsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getDynamicParamsDynamicParamParserRuleCall_2_0_1_0()); }
	ruleDynamicParam{ after(grammarAccess.getStepAccess().getDynamicParamsDynamicParamParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Step__TableAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getTableTableParserRuleCall_4_1_0()); }
	ruleTable{ after(grammarAccess.getStepAccess().getTableTableParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticParam__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticParamAccess().getNameSTATIC_PARAMTerminalRuleCall_0()); }
	RULE_STATIC_PARAM{ after(grammarAccess.getStaticParamAccess().getNameSTATIC_PARAMTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DynamicParam__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDynamicParamAccess().getNameDYNAMIC_PARAMTerminalRuleCall_0()); }
	RULE_DYNAMIC_PARAM{ after(grammarAccess.getDynamicParamAccess().getNameDYNAMIC_PARAMTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getNameTextPartParserRuleCall_0_0()); }
	ruleTextPart{ after(grammarAccess.getCommentAccess().getNameTextPartParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getNameAlternatives_1_0()); }
(rule__Comment__NameAlternatives_1_0)
{ after(grammarAccess.getCommentAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__HeadingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getHeadingTableRowParserRuleCall_1_0()); }
	ruleTableRow{ after(grammarAccess.getTableAccess().getHeadingTableRowParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RowsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_5_1_0()); }
	ruleTableRow{ after(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__CellsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableRowAccess().getCellsTableCellParserRuleCall_0_0()); }
	ruleTableCell{ after(grammarAccess.getTableRowAccess().getCellsTableCellParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableCell__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableCellAccess().getNameAlternatives_1_0()); }
(rule__TableCell__NameAlternatives_1_0)
{ after(grammarAccess.getTableCellAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SINGLE_NL : '\r'? '\n';

RULE_WORD : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STATIC_PARAM : '"' ( options {greedy=false;} : . )*'"';

RULE_DYNAMIC_PARAM : '<' ( options {greedy=false;} : . )*'>';

RULE_TABLE_ROW_END : '|' (RULE_SINGLE_NL|EOF);

RULE_WS : (' '|'\t');

RULE_SEPARATORS : ~(('\r'|'\n'|'a'..'z'|'A'..'Z'|'0'..'9'|'_'|' '|'\t'));


